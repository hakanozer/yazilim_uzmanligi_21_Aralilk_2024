{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\pages\\register\\register.html", "angular:jit:style:src\\app\\pages\\register\\register.css", "src/app/pages/register/register.ts", "src/app/pages/register/register.spec.ts"],
  "sourcesContent": ["<app-background-item></app-background-item>\r\n\r\n<div class=\"register-wrapper\">\r\n  <form class=\"register-card\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <h2>Kay\u0131t Ol</h2>\r\n\r\n    <div class=\"field\">\r\n      <label for=\"name\">Ad</label>\r\n      <input id=\"name\" type=\"text\" formControlName=\"name\" />\r\n    </div>\r\n    <div class=\"field\">\r\n      <label for=\"surname\">Soyad</label>\r\n      <input id=\"surname\" type=\"text\" formControlName=\"surname\" />\r\n    </div>\r\n    <div class=\"field\">\r\n      <label for=\"email\">E-Posta</label>\r\n      <input id=\"email\" type=\"email\" formControlName=\"email\" />\r\n    </div>\r\n    <div class=\"field\">\r\n      <label for=\"password\">Parola</label>\r\n      <input id=\"password\" type=\"password\" formControlName=\"password\" />\r\n    </div>\r\n    <div class=\"field\">\r\n      <label for=\"passwordAgain\">Tekrar Parola</label>\r\n      <input id=\"passwordAgain\" type=\"password\" formControlName=\"passwordAgain\" />\r\n    </div>\r\n\r\n    <div>\r\n      <div class=\"profile-photo-list\" style=\"display: flex; gap: 12px\">\r\n          <ng-container *ngFor=\"let photo of photoList\">\r\n          <img\r\n            [src]=\"photo\"\r\n            (click)=\"selectPhoto(photo)\"\r\n            [class.selected]=\"photo === selectedPhoto\"\r\n            style=\"\r\n              width: 40px;\r\n              height: 40px;\r\n              border-radius: 50%;\r\n              object-fit: cover;\r\n              cursor: pointer;\r\n              border: 2px solid transparent;\r\n            \"\r\n            [style.border-color]=\"photo === selectedPhoto ? '#007bff' : 'transparent'\"\r\n            alt=\"Profil Foto\u011Fraf\u0131\"\r\n          />\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"field\">\r\n      <label>Kullan\u0131c\u0131 Rol\u00FC</label>\r\n      <div class=\"role-cards\">\r\n        <label class=\"role-card\" [class.active]=\"form.get('role')?.value==='student'\">\r\n          <input type=\"radio\" formControlName=\"role\" value=\"student\" />\r\n          <span class=\"role-title\">\u00D6\u011Frenci</span>\r\n          <span class=\"role-desc\">Kurs sat\u0131n al ve \u00F6\u011Frenmeye ba\u015Fla</span>\r\n        </label>\r\n        <label class=\"role-card\" [class.active]=\"form.get('role')?.value==='instructor'\">\r\n          <input type=\"radio\" formControlName=\"role\" value=\"instructor\" />\r\n          <span class=\"role-title\">E\u011Fitici</span>\r\n          <span class=\"role-desc\">Kendi kurslar\u0131n\u0131 olu\u015Ftur ve y\u00F6net</span>\r\n        </label>\r\n      </div>\r\n      <div class=\"text-danger small mt-1\" *ngIf=\"form.get('role')?.invalid && form.get('role')?.touched\">Rol se\u00E7imi zorunludur.</div>\r\n    </div>\r\n\r\n    <button class=\"submit\" type=\"submit\" [disabled]=\"submitting || form.invalid\">\r\n        {{ submitting ? 'Kay\u0131t Olunuyor...' : 'Kay\u0131t Ol' }}\r\n    </button>\r\n    <p class=\"text-center mt-2\">Daha \u00F6nce kay\u0131t olmu\u015Fmuydunuz?</p>\r\n    <a class=\"login-btn text-center\" (click)=\"navigateToLogin()\">Giri\u015F Yap</a>\r\n  </form>\r\n</div>\r\n", "/* src/app/pages/register/register.css */\n.register-wrapper {\n  position: relative;\n  min-height: calc(100vh - 56px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 1rem;\n  z-index: 0;\n}\n.register-card {\n  width: 100%;\n  max-width: 340px;\n  background: rgba(255, 255, 255, 0.85);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n  padding: 1.75rem 1.5rem 1.5rem;\n  border-radius: 16px;\n  box-shadow: 0 4px 20px -4px rgba(0, 0, 0, .25);\n  display: flex;\n  flex-direction: column;\n  gap: 1.1rem;\n}\n.register-card.title {\n  margin: 0 0 .5rem;\n  font-size: 1.35rem;\n  font-weight: 600;\n  text-align: center;\n  color: #1b1f29;\n}\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: .4rem;\n}\n.field label {\n  font-size: .75rem;\n  font-weight: 600;\n  letter-spacing: .5px;\n  text-transform: uppercase;\n  color: #374151;\n}\n.field input {\n  border: 1px solid #cbd5e1;\n  border-radius: 8px;\n  padding: .55rem .75rem;\n  font-size: .85rem;\n  background: #fff;\n  outline: none;\n  transition: border-color .15s, box-shadow .15s;\n}\n.field input:focus {\n  border-color: #2563eb;\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, .15);\n}\n.field input.invalid {\n  border-color: #dc2626;\n}\n.error {\n  font-size: .65rem;\n  color: #b91c1c;\n  line-height: 1.1;\n}\n.submit {\n  appearance: none;\n  border: none;\n  border-radius: 8px;\n  background:\n    linear-gradient(\n      135deg,\n      #2563eb,\n      #1d4ed8);\n  color: #fff;\n  font-size: .8rem;\n  font-weight: 600;\n  padding: .65rem .75rem;\n  cursor: pointer;\n  transition: background .2s, transform .15s;\n  letter-spacing: .5px;\n  text-transform: uppercase;\n}\n.submit:disabled {\n  opacity: .6;\n  cursor: not-allowed;\n}\n.submit:not(:disabled):hover {\n  background:\n    linear-gradient(\n      135deg,\n      #1d4ed8,\n      #1e40af);\n}\n.submit:not(:disabled):active {\n  transform: translateY(1px);\n}\n.role-cards {\n  display: flex;\n  gap: .75rem;\n}\n.role-card {\n  position: relative;\n  flex: 1;\n  border: 1px solid #cbd5e1;\n  border-radius: 12px;\n  padding: .75rem .65rem .6rem;\n  background: #fff;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  gap: .3rem;\n  transition:\n    border-color .15s,\n    box-shadow .15s,\n    background .2s;\n  font-size: .7rem;\n}\n.role-card:hover {\n  border-color: #2563eb;\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, .12);\n}\n.role-card.active {\n  border-color: #1d4ed8;\n  background:\n    linear-gradient(\n      135deg,\n      #eff6ff,\n      #dbeafe);\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, .25);\n}\n.role-card input {\n  position: absolute;\n  opacity: 0;\n  inset: 0;\n  cursor: pointer;\n}\n.role-card .role-title {\n  font-size: .8rem;\n  font-weight: 600;\n  letter-spacing: .5px;\n}\n.role-card .role-desc {\n  font-size: .6rem;\n  line-height: 1.1;\n  color: #475569;\n}\n@media (max-width: 420px) {\n  .login-card {\n    max-width: 100%;\n    padding: 1.25rem 1rem 1rem;\n  }\n  .login-card .title {\n    font-size: 1.2rem;\n  }\n}\n/*# sourceMappingURL=register.css.map */\n", "import { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BackgroundItem } from \"../../components/background-item/background-item\";\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  imports: [CommonModule, ReactiveFormsModule, BackgroundItem],\r\n  templateUrl: './register.html',\r\n  styleUrl: './register.css',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class Register {\r\n  photo: any;\r\n  navigateToLogin() {\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n  submitting = false;\r\n  private auth = inject(AuthService);\r\n  private router = inject(Router);\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n  this.submitting = true;\r\n    const { name, surname, email, password, role } = this.form.value as any;\r\n    const profilePhoto = this.selectedPhoto || this.photoList[0] || '';\r\n    this.auth.register({ name: name!, surname: surname!, email: email!, password: password!, profilePhoto, role: role! })\r\n      .subscribe({\r\n        next: user => {\r\n          this.submitting = false;\r\n          const { password: _pw, ...safe } = user as any;\r\n          localStorage.setItem('currentUser', JSON.stringify(safe));\r\n          this.auth.currentUser.set(safe);\r\n          this.router.navigateByUrl('/');\r\n        },\r\n        error: () => {\r\n          this.submitting = false;\r\n          alert('Kayıt başarısız');\r\n        }\r\n      });\r\n  }\r\n  private fb = inject(FormBuilder);\r\n\r\n  // Formu signal ile sarmala\r\n  readonly formSignal = signal(this.fb.group({\r\n    name: ['', Validators.required],\r\n    surname: ['', Validators.required],\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', Validators.required],\r\n    passwordAgain: ['', Validators.required],\r\n    role: ['student', Validators.required]\r\n  }, {\r\n    validators: (group) => {\r\n      const password = group.get('password')?.value;\r\n      const passwordAgain = group.get('passwordAgain')?.value;\r\n      return password === passwordAgain ? null : { passwordMismatch: true };\r\n    }\r\n  }));\r\n\r\n\r\n  get form() {\r\n    return this.formSignal();\r\n  }\r\n    photoList = [\r\n    'assets/profile-photo/1.png',\r\n    'assets/profile-photo/2.png',\r\n    'assets/profile-photo/3.png',\r\n    'assets/profile-photo/4.png',\r\n    'assets/profile-photo/5.png',\r\n    'assets/profile-photo/6.png',\r\n  ];\r\n  selectedPhoto = '';\r\n\r\n    selectPhoto(photo: string) {\r\n    this.selectedPhoto = photo;\r\n  }\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { Register } from './register';\r\nimport { globalTestConfig } from '../../../test-setup';\r\n\r\ndescribe('Register', () => {\r\n  let component: Register;\r\n  let fixture: ComponentFixture<Register>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [Register],\r\n      providers: [...globalTestConfig.providers]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(Register);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": ["register_default", "init_register", "Register", "init_register"]
}

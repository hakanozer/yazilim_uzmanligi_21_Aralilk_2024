{
  "version": 3,
  "sources": ["src/app/guards/not-auth-guard.spec.ts", "src/app/guards/not-auth-guard.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\r\nimport { CanActivateFn } from '@angular/router';\r\nimport { notAuthGuard } from './not-auth-guard';\r\nimport { globalTestConfig } from '../../test-setup';\r\n\r\ndescribe('notAuthGuard', () => {\r\n  const executeGuard: CanActivateFn = (...guardParameters) => \r\n      TestBed.runInInjectionContext(() => notAuthGuard(...guardParameters));\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      providers: [...globalTestConfig.providers]\r\n    });\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(executeGuard).toBeTruthy();\r\n  });\r\n});\r\n", "import { CanActivateFn, Router } from '@angular/router';\r\nimport { inject } from '@angular/core';\r\n\r\nexport const notAuthGuard: CanActivateFn = () => {\r\n  const router = inject(Router);\r\n  const raw = typeof window !== 'undefined' ? localStorage.getItem('currentUser') : null;\r\n  if (raw) {\r\n    router.navigate(['/']);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;;;ACAA;AACA;AAEO,IAAM,eAA8B,MAAK;AAC9C,QAAM,SAAS,OAAO,MAAM;AAC5B,QAAM,MAAM,OAAO,WAAW,cAAc,aAAa,QAAQ,aAAa,IAAI;AAClF,MAAI,KAAK;AACP,WAAO,SAAS,CAAC,GAAG,CAAC;AACrB,WAAO;EACT;AACA,SAAO;AACT;;;ADRA;AAEA,SAAS,gBAAgB,MAAK;AAC5B,QAAM,eAA8B,IAAI,oBACpC,QAAQ,sBAAsB,MAAM,aAAa,GAAG,eAAe,CAAC;AAExE,aAAW,MAAK;AACd,YAAQ,uBAAuB;MAC7B,WAAW,CAAC,GAAG,iBAAiB,SAAS;KAC1C;EACH,CAAC;AAED,KAAG,qBAAqB,MAAK;AAC3B,WAAO,YAAY,EAAE,WAAU;EACjC,CAAC;AACH,CAAC;",
  "names": []
}

{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\pages\\login\\login.html", "angular:jit:style:src\\app\\pages\\login\\login.css", "src/app/pages/login/login.ts", "src/app/pages/login/login.spec.ts"],
  "sourcesContent": ["<app-background-item></app-background-item>\r\n<div class=\"login-wrapper\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"login-card\">\r\n        <h2 class=\"title\">Giri\u015F Yap</h2>\r\n\r\n        <div class=\"field\">\r\n            <label for=\"email\">E-Posta</label>\r\n            <input id=\"email\" type=\"email\" formControlName=\"email\" [class.invalid]=\"form.controls.email.touched && form.controls.email.invalid\">\r\n            @if(form.controls.email.touched && form.controls.email.errors){\r\n                <div class=\"error\">\r\n                    @if(form.controls.email.errors['required']) { Email zorunlu }\r\n                    @else if(form.controls.email.errors['email']) { Ge\u00E7erli bir email girin }\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n            <label for=\"password\">\u015Eifre</label>\r\n            <input id=\"password\" type=\"password\" formControlName=\"password\" [class.invalid]=\"form.controls.password.touched && form.controls.password.invalid\">\r\n            @if(form.controls.password.touched && form.controls.password.errors){\r\n                <div class=\"error\">\r\n                    @if(form.controls.password.errors['required']) { \u015Eifre zorunlu }\r\n                    @else if(form.controls.password.errors['minlength']) { Minimum 6 karakter }\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n        <button class=\"submit\" type=\"submit\" [disabled]=\"submitting || form.invalid\">@if(submitting){ Giri\u015F yap\u0131l\u0131yor... } @else { Giri\u015F Yap }</button>\r\n        <p class=\"text-center mt-3\">Hen\u00FCz kay\u0131t olmad\u0131n\u0131z m\u0131?</p>\r\n        <a class=\"login-btn text-center\" (click)=\"navigateToLogin()\">Kay\u0131t ol</a>\r\n    </form>\r\n</div>\r\n\r\n\r\n", "/* src/app/pages/login/login.css */\n.login-wrapper {\n  position: relative;\n  min-height: calc(100vh - 56px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 1rem;\n  z-index: 0;\n}\n.login-card {\n  width: 100%;\n  max-width: 340px;\n  background: rgba(255, 255, 255, 0.85);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n  padding: 1.75rem 1.5rem 1.5rem;\n  border-radius: 16px;\n  box-shadow: 0 4px 20px -4px rgba(0, 0, 0, .25);\n  display: flex;\n  flex-direction: column;\n  gap: 1.1rem;\n}\n.login-card .title {\n  margin: 0 0 .5rem;\n  font-size: 1.35rem;\n  font-weight: 600;\n  text-align: center;\n  color: #1b1f29;\n}\n.field {\n  display: flex;\n  flex-direction: column;\n  gap: .4rem;\n}\n.field label {\n  font-size: .75rem;\n  font-weight: 600;\n  letter-spacing: .5px;\n  text-transform: uppercase;\n  color: #374151;\n}\n.field input {\n  border: 1px solid #cbd5e1;\n  border-radius: 8px;\n  padding: .55rem .75rem;\n  font-size: .85rem;\n  background: #fff;\n  outline: none;\n  transition: border-color .15s, box-shadow .15s;\n}\n.field input:focus {\n  border-color: #2563eb;\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, .15);\n}\n.field input.invalid {\n  border-color: #dc2626;\n}\n.error {\n  font-size: .65rem;\n  color: #b91c1c;\n  line-height: 1.1;\n}\n.submit {\n  appearance: none;\n  border: none;\n  border-radius: 8px;\n  background:\n    linear-gradient(\n      135deg,\n      #2563eb,\n      #1d4ed8);\n  color: #fff;\n  font-size: .8rem;\n  font-weight: 600;\n  padding: .65rem .75rem;\n  cursor: pointer;\n  transition: background .2s, transform .15s;\n  letter-spacing: .5px;\n  text-transform: uppercase;\n}\n.submit:disabled {\n  opacity: .6;\n  cursor: not-allowed;\n}\n.submit:not(:disabled):hover {\n  background:\n    linear-gradient(\n      135deg,\n      #1d4ed8,\n      #1e40af);\n}\n.submit:not(:disabled):active {\n  transform: translateY(1px);\n}\n@media (max-width: 420px) {\n  .login-card {\n    max-width: 100%;\n    padding: 1.25rem 1rem 1rem;\n  }\n  .login-card .title {\n    font-size: 1.2rem;\n  }\n}\n/*# sourceMappingURL=login.css.map */\n", "import { Component, ChangeDetectionStrategy, inject } from '@angular/core';\r\nimport { BackgroundItem } from '../../components/background-item/background-item';\r\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.html',\r\n  styleUrl: './login.css',\r\n  imports: [CommonModule, ReactiveFormsModule, BackgroundItem],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Login {\r\n  navigateToLogin() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  private fb = inject(FormBuilder);\r\n  private auth = inject(AuthService); // service injection context içinde\r\n  private router = inject(Router);\r\n\r\n  readonly form = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required, Validators.minLength(6)]],\r\n  });\r\n\r\n\r\n  submitting = false;\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.submitting = true;\r\n    const { email, password } = this.form.value;\r\n    this.auth.login(email!, password!).subscribe((user) => {\r\n      this.submitting = false;\r\n      if (!user) {\r\n        alert('Kullanıcı bulunamadı veya şifre hatalı');\r\n        return;\r\n      }\r\n  // login success\r\n  // başarılıysa ana sayfaya yönlendir\r\n  this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { Login } from './login';\r\nimport { globalTestConfig } from '../../../test-setup';\r\n\r\ndescribe('Login', () => {\r\n  let component: Login;\r\n  let fixture: ComponentFixture<Login>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [Login],\r\n      providers: [...globalTestConfig.providers]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(Login);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,cAAA;AAAA;AAAA,IAAAD,iBAAA;AAAA;AAAA;;;ICca;;;;;;;AAdb;AACA;AACA;AACA;AACA;AACA;AASO,IAAM,QAAN,MAAME,OAAK;MAChB,kBAAe;AACb,cAAM,IAAI,MAAM,yBAAyB;MAC3C;MACQ,KAAK,OAAO,WAAW;MACvB,OAAO,OAAO,WAAW;;MACzB,SAAS,OAAO,MAAM;MAErB,OAAO,KAAK,GAAG,MAAM;QAC5B,OAAO,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;QACnD,UAAU,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;OAC9D;MAGD,aAAa;MAEb,SAAM;AACJ,YAAI,KAAK,KAAK,SAAS;AACrB,eAAK,KAAK,iBAAgB;AAC1B;QACF;AACA,aAAK,aAAa;AAClB,cAAM,EAAE,OAAO,SAAQ,IAAK,KAAK,KAAK;AACtC,aAAK,KAAK,MAAM,OAAQ,QAAS,EAAE,UAAU,CAAC,SAAQ;AACpD,eAAK,aAAa;AAClB,cAAI,CAAC,MAAM;AACT,kBAAM,iEAAwC;AAC9C;UACF;AAGJ,eAAK,OAAO,SAAS,CAAC,GAAG,CAAC;QACxB,CAAC;MACH;;AAjCW,YAAK,WAAA;MAPjB,UAAU;QACT,UAAU;QACV,UAAA;QAEA,SAAS,CAAC,cAAc,qBAAqB,cAAc;QAC3D,iBAAiB,wBAAwB;;OAC1C;OACY,KAAK;;;;;ACdlB;;;AACA,IAAAC;AACA;AAEA,aAAS,SAAS,MAAK;AACrB,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,KAAK;UACf,WAAW,CAAC,GAAG,iBAAiB,SAAS;SAC1C,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,KAAK;AACvC,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["login_default", "init_login", "Login", "init_login"]
}

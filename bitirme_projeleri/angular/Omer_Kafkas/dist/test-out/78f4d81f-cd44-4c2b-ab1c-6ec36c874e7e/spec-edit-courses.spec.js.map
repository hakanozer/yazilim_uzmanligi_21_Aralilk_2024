{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\pages\\edit-courses\\edit-courses.html", "angular:jit:style:src\\app\\pages\\edit-courses\\edit-courses.css", "src/app/pages/edit-courses/edit-courses.ts", "src/app/pages/edit-courses/edit-courses.spec.ts"],
  "sourcesContent": ["<div class=\"container py-5 mt-5\">\r\n\t<h3 class=\"mb-4\">Kurs Y\u00F6netimi</h3>\r\n\t@if(loading()){\r\n\t\t<div class=\"d-flex gap-2 align-items-center text-muted\"><div class=\"spinner-border spinner-border-sm\"></div><span>Y\u00FCkleniyor...</span></div>\r\n\t} @else {\r\n\t\t<div class=\"row g-4\">\r\n\t\t\t<div class=\"col-md-4\">\r\n\t\t\t\t<div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n\t\t\t\t\t<h5 class=\"m-0\">Kurslar\u0131m</h5>\r\n\t\t\t\t\t<button class=\"btn btn-sm btn-primary\" (click)=\"newCourse()\">Yeni</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"list-group small\" style=\"max-height:420px;overflow:auto\">\r\n\t\t\t\t\t@for(c of filteredCourses(); track c.id){\r\n\t\t\t\t\t\t<button type=\"button\" class=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\" [class.active]=\"selectedCourseId()===c.id\" (click)=\"edit(c)\">\r\n\t\t\t\t\t\t\t<span class=\"text-start\">\r\n\t\t\t\t\t\t\t\t<strong class=\"d-block\">{{ c.title }}</strong>\r\n\t\t\t\t\t\t\t\t<small class=\"text-muted\">\u20BA{{ c.price }} \u2022 {{ c.durationHours }} saat</small>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class=\"badge bg-secondary\">{{ c.level }}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t@if(!filteredCourses().length){\r\n\t\t\t\t\t\t<div class=\"list-group-item text-muted\">Kurs yok</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-md-5\">\r\n\t\t\t\t<h5 class=\"mb-3\">Kurs Formu</h5>\r\n\t\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"save()\" class=\"vstack gap-2\">\r\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Ba\u015Fl\u0131k\" formControlName=\"title\" />\r\n\t\t\t\t\t<textarea rows=\"3\" class=\"form-control\" placeholder=\"A\u00E7\u0131klama\" formControlName=\"description\"></textarea>\r\n\t\t\t\t\t<select class=\"form-select\" formControlName=\"categoryId\">\r\n\t\t\t\t\t\t<option value=\"\" disabled>Kategori se\u00E7</option>\r\n\t\t\t\t\t\t@for(cat of categories(); track cat.id){\r\n\t\t\t\t\t\t\t<option [value]=\"cat.id\">{{ cat.name }}</option>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<div class=\"d-flex gap-2\">\r\n\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" placeholder=\"Fiyat\" formControlName=\"price\" />\r\n\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" placeholder=\"S\u00FCre (saat)\" formControlName=\"durationHours\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"d-flex gap-2\">\r\n\t\t\t\t\t\t<select class=\"form-select\" formControlName=\"level\">\r\n\t\t\t\t\t\t\t<option>Ba\u015Flang\u0131\u00E7</option>\r\n\t\t\t\t\t\t\t<option>Orta</option>\r\n\t\t\t\t\t\t\t<option>\u0130leri</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Resim (opsiyonel)\" formControlName=\"image\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"d-flex gap-2 mt-2\">\r\n\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-success\" [disabled]=\"saving()\">Kaydet</button>\r\n\t\t\t\t\t\t@if(form.value.id){\r\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"remove(form.value)\">Sil</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-md-3\">\r\n\t\t\t\t<h5 class=\"mb-3\">Ders Ekle</h5>\r\n\t\t\t\t@if(!selectedCourse()){\r\n\t\t\t\t\t<div class=\"alert alert-info p-2 small\">\u00D6nce bir kurs se\u00E7 / kaydet.</div>\r\n\t\t\t\t} @else {\r\n\t\t\t\t\t<form [formGroup]=\"lessonForm\" (ngSubmit)=\"addLesson()\" class=\"vstack gap-2\">\r\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Ders Ba\u015Fl\u0131\u011F\u0131\" formControlName=\"title\" />\r\n\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" placeholder=\"S\u00FCre (dk)\" formControlName=\"durationMin\" />\r\n\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-sm\" [disabled]=\"addingLesson()\">Ekle</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n</div>\r\n", "/* src/app/pages/edit-courses/edit-courses.css */\n/*# sourceMappingURL=edit-courses.css.map */\n", "import { Component, inject, signal, computed } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\r\nimport { Api } from '../../api';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-courses',\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './edit-courses.html',\r\n  styleUrl: './edit-courses.css'\r\n})\r\nexport class EditCourses {\r\n  private api = inject(Api);\r\n  private auth = inject(AuthService);\r\n  private fb = inject(FormBuilder);\r\n\r\n  loading = signal(true);\r\n  saving = signal(false);\r\n  addingLesson = signal(false);\r\n  courses = signal<any[]>([]);\r\n  categories = signal<any[]>([]);\r\n  selectedCourseId = signal<string>('');\r\n\r\n  readonly form = this.fb.group({\r\n    id: [''],\r\n    title: ['', Validators.required],\r\n    description: ['', Validators.required],\r\n    categoryId: ['', Validators.required],\r\n    price: [0, [Validators.required, Validators.min(0)]],\r\n    durationHours: [0, [Validators.required, Validators.min(1)]],\r\n    level: ['Başlangıç', Validators.required],\r\n    image: ['']\r\n  });\r\n\r\n  readonly lessonForm = this.fb.group({\r\n    title: ['', Validators.required],\r\n    durationMin: [10, [Validators.required, Validators.min(1)]]\r\n  });\r\n\r\n  currentUser = computed(() => this.auth.currentUser());\r\n  instructorId = computed(() => this.currentUser()?.id || '');\r\n  filteredCourses = computed(() => this.courses().filter(c => c.instructorId === this.instructorId()));\r\n  selectedCourse = computed(() => this.filteredCourses().find(c => c.id === this.selectedCourseId()));\r\n\r\n  constructor(){\r\n    const user = this.auth.currentUser();\r\n    if(!user || user.role !== 'instructor'){ return; }\r\n    this.loadInitial();\r\n  }\r\n\r\n  private loadInitial(){\r\n    this.loading.set(true);\r\n    this.api.list<any>('categories').subscribe(cats => this.categories.set(cats));\r\n    this.api.list<any>('courses').subscribe(all => {\r\n      this.courses.set(all);\r\n      this.loading.set(false);\r\n    });\r\n  }\r\n\r\n  edit(course: any){\r\n    this.form.reset({\r\n      id: course.id,\r\n      title: course.title,\r\n      description: course.description,\r\n      categoryId: course.categoryId,\r\n      price: course.price,\r\n      durationHours: course.durationHours,\r\n      level: course.level || 'Başlangıç',\r\n      image: course.image || ''\r\n    });\r\n    this.selectedCourseId.set(course.id);\r\n  }\r\n\r\n  newCourse(){\r\n    this.form.reset({ id: '', title: '', description: '', categoryId: '', price: 0, durationHours: 1, level: 'Başlangıç', image: '' });\r\n    this.selectedCourseId.set('');\r\n  }\r\n\r\n  save(){\r\n    if(this.form.invalid || !this.instructorId()) { this.form.markAllAsTouched(); return; }\r\n    const v = this.form.value as any;\r\n    const payload = {\r\n      title: v.title,\r\n      description: v.description,\r\n      categoryId: v.categoryId,\r\n      price: Number(v.price),\r\n      durationHours: Number(v.durationHours),\r\n      level: v.level,\r\n      image: v.image,\r\n      instructorId: this.instructorId(),\r\n      instructorName: [this.currentUser()?.name, this.currentUser()?.surname].filter(Boolean).join(' ').trim(),\r\n      instructorPhoto: this.currentUser()?.profilePhoto || 'assets/logo.png'\r\n    };\r\n    this.saving.set(true);\r\n    if(v.id){\r\n      this.api.put<any>(`courses/${v.id}`, payload).subscribe(updated => {\r\n        const list = this.courses().map(c => c.id === v.id ? updated as any : c);\r\n        this.courses.set(list);\r\n        this.saving.set(false);\r\n      });\r\n    } else {\r\n      this.api.post<any>('courses', payload).subscribe(created => {\r\n        this.courses.set([...this.courses(), created as any]);\r\n        this.saving.set(false);\r\n        this.form.patchValue({ id: (created as any).id });\r\n        this.selectedCourseId.set((created as any).id);\r\n      });\r\n    }\r\n  }\r\n\r\n  remove(course: any){\r\n    if(!confirm('Silmek istediğinize emin misiniz?')) return;\r\n    this.api.delete(`courses/${course.id}`).subscribe(() => {\r\n      this.courses.set(this.courses().filter(c => c.id !== course.id));\r\n      if(this.selectedCourseId() === course.id){ this.newCourse(); }\r\n    });\r\n  }\r\n\r\n  addLesson(){\r\n    if(this.lessonForm.invalid || !this.selectedCourse()) { this.lessonForm.markAllAsTouched(); return; }\r\n    const v = this.lessonForm.value as any;\r\n    const payload = { courseId: this.selectedCourseId(), title: v.title, durationMin: Number(v.durationMin) };\r\n    this.addingLesson.set(true);\r\n    this.api.post('lessons', payload).subscribe({\r\n      next: () => { this.addingLesson.set(false); this.lessonForm.reset({ title: '', durationMin: 10 }); alert('Ders eklendi'); },\r\n      error: () => { this.addingLesson.set(false); alert('Ders eklenemedi'); }\r\n    });\r\n  }\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { EditCourses } from './edit-courses';\r\nimport { globalTestConfig } from '../../../test-setup';\r\n\r\ndescribe('EditCourses', () => {\r\n  let component: EditCourses;\r\n  let fixture: ComponentFixture<EditCourses>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [EditCourses],\r\n      providers: [...globalTestConfig.providers]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(EditCourses);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": ["edit_courses_default", "init_edit_courses", "EditCourses", "init_edit_courses"]
}

{
  "version": 3,
  "sources": ["src/app/services/search.service.ts"],
  "sourcesContent": ["import { Injectable, inject, signal, computed } from '@angular/core';\r\nimport { Api } from '../api';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface GlobalSearchResult {\r\n  type: 'course' | 'user' | 'lesson' | 'comment';\r\n  id: string;\r\n  title: string;\r\n  subtitle?: string;\r\n  relatedCourseId?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SearchService {\r\n  private api = inject(Api);\r\n  private cache = new Map<string, GlobalSearchResult[]>();\r\n  private loading = signal(false);\r\n  readonly loadingState = computed(() => this.loading());\r\n\r\n  search(query: string) {\r\n    const q = query.trim().toLowerCase();\r\n    if (!q) return of<GlobalSearchResult[]>([]);\r\n    if (this.cache.has(q)) {\r\n      return of(this.cache.get(q)!);\r\n    }\r\n    this.loading.set(true);\r\n    return forkJoin({\r\n      courses: this.api.list<any>('courses'),\r\n      users: this.api.list<any>('users'),\r\n      lessons: this.api.list<any>('lessons'),\r\n      comments: this.api.list<any>('comments')\r\n    }).pipe(\r\n      map(({ courses, users, lessons, comments }) => {\r\n        const results: GlobalSearchResult[] = [];\r\n        for (const c of courses) {\r\n          if ([c.title, c.description, c.instructorName].some(f => typeof f === 'string' && f.toLowerCase().includes(q))) {\r\n            results.push({ type: 'course', id: c.id, title: c.title, subtitle: c.instructorName, relatedCourseId: c.id });\r\n          }\r\n        }\r\n        for (const u of users) {\r\n          const full = [u.name, u.surname, u.email].filter(Boolean).join(' ');\r\n            if (full.toLowerCase().includes(q)) {\r\n              results.push({ type: 'user', id: u.id, title: full, subtitle: u.role || 'kullanıcı' });\r\n            }\r\n        }\r\n        for (const l of lessons) {\r\n          if (l.title?.toLowerCase().includes(q)) {\r\n            results.push({ type: 'lesson', id: l.id, title: l.title, relatedCourseId: l.courseId });\r\n          }\r\n        }\r\n        for (const cm of comments) {\r\n          if (cm.text?.toLowerCase().includes(q)) {\r\n            results.push({ type: 'comment', id: cm.id, title: cm.text.slice(0, 60) + (cm.text.length > 60 ? '…' : ''), relatedCourseId: cm.courseId });\r\n          }\r\n        }\r\n        // Basit sıralama: course > lesson > comment > user sonra alfabetik\r\n        results.sort((a, b) => {\r\n          const weight: Record<GlobalSearchResult['type'], number> = { course: 0, lesson: 1, comment: 2, user: 3 };\r\n          const oa = weight[a.type];\r\n          const ob = weight[b.type];\r\n          if (oa !== ob) return oa - ob;\r\n          return a.title.localeCompare(b.title);\r\n        });\r\n        this.cache.set(q, results);\r\n        this.loading.set(false);\r\n        return results;\r\n      })\r\n    );\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;IAca;;;;;AAdb;AACA;AACA;AACA;AAWO,IAAM,gBAAN,MAAMA,eAAa;MAChB,MAAM,OAAO,GAAG;MAChB,QAAQ,oBAAI,IAAG;MACf,UAAU,OAAO,KAAK;MACrB,eAAe,SAAS,MAAM,KAAK,QAAO,CAAE;MAErD,OAAO,OAAa;AAClB,cAAM,IAAI,MAAM,KAAI,EAAG,YAAW;AAClC,YAAI,CAAC;AAAG,iBAAO,GAAyB,CAAA,CAAE;AAC1C,YAAI,KAAK,MAAM,IAAI,CAAC,GAAG;AACrB,iBAAO,GAAG,KAAK,MAAM,IAAI,CAAC,CAAE;QAC9B;AACA,aAAK,QAAQ,IAAI,IAAI;AACrB,eAAO,SAAS;UACd,SAAS,KAAK,IAAI,KAAU,SAAS;UACrC,OAAO,KAAK,IAAI,KAAU,OAAO;UACjC,SAAS,KAAK,IAAI,KAAU,SAAS;UACrC,UAAU,KAAK,IAAI,KAAU,UAAU;SACxC,EAAE,KACD,IAAI,CAAC,EAAE,SAAS,OAAO,SAAS,SAAQ,MAAM;AAC5C,gBAAM,UAAgC,CAAA;AACtC,qBAAW,KAAK,SAAS;AACvB,gBAAI,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,KAAK,OAAK,OAAO,MAAM,YAAY,EAAE,YAAW,EAAG,SAAS,CAAC,CAAC,GAAG;AAC9G,sBAAQ,KAAK,EAAE,MAAM,UAAU,IAAI,EAAE,IAAI,OAAO,EAAE,OAAO,UAAU,EAAE,gBAAgB,iBAAiB,EAAE,GAAE,CAAE;YAC9G;UACF;AACA,qBAAW,KAAK,OAAO;AACrB,kBAAM,OAAO,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AAChE,gBAAI,KAAK,YAAW,EAAG,SAAS,CAAC,GAAG;AAClC,sBAAQ,KAAK,EAAE,MAAM,QAAQ,IAAI,EAAE,IAAI,OAAO,MAAM,UAAU,EAAE,QAAQ,sBAAW,CAAE;YACvF;UACJ;AACA,qBAAW,KAAK,SAAS;AACvB,gBAAI,EAAE,OAAO,YAAW,EAAG,SAAS,CAAC,GAAG;AACtC,sBAAQ,KAAK,EAAE,MAAM,UAAU,IAAI,EAAE,IAAI,OAAO,EAAE,OAAO,iBAAiB,EAAE,SAAQ,CAAE;YACxF;UACF;AACA,qBAAW,MAAM,UAAU;AACzB,gBAAI,GAAG,MAAM,YAAW,EAAG,SAAS,CAAC,GAAG;AACtC,sBAAQ,KAAK,EAAE,MAAM,WAAW,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,MAAM,GAAG,EAAE,KAAK,GAAG,KAAK,SAAS,KAAK,WAAM,KAAK,iBAAiB,GAAG,SAAQ,CAAE;YAC3I;UACF;AAEA,kBAAQ,KAAK,CAAC,GAAG,MAAK;AACpB,kBAAM,SAAqD,EAAE,QAAQ,GAAG,QAAQ,GAAG,SAAS,GAAG,MAAM,EAAC;AACtG,kBAAM,KAAK,OAAO,EAAE,IAAI;AACxB,kBAAM,KAAK,OAAO,EAAE,IAAI;AACxB,gBAAI,OAAO;AAAI,qBAAO,KAAK;AAC3B,mBAAO,EAAE,MAAM,cAAc,EAAE,KAAK;UACtC,CAAC;AACD,eAAK,MAAM,IAAI,GAAG,OAAO;AACzB,eAAK,QAAQ,IAAI,KAAK;AACtB,iBAAO;QACT,CAAC,CAAC;MAEN;;AAvDW,oBAAa,WAAA;MADzB,WAAW,EAAE,YAAY,OAAM,CAAE;OACrB,aAAa;;;",
  "names": ["SearchService"]
}
